generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Client {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  email     String     @unique
  telephone String
  ICE       String?    @unique
  adresse   String     @default("")
  city      String?    @default("")
  type      ClientType @default(Commune)
  webSite   String?    @default("")
  nom       String?    @default("")
  commandes Commande[]
}

model Category {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  nom         String    @unique
  description String?   @default("")
  produit     Produit[]
}

model Produit {
  id               Int              @id @default(autoincrement())
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  codeProduit      String
  nomProduit       String
  prixProduit      Int
  quantiteProduit  Int
  noteProduit      String?
  imageProduit     String?
  categorieId      Int
  categorieProduit Category         @relation(fields: [categorieId], references: [id])
  produitMatiere   ProduitMatiere[]
  commmandes       ligneCommande[]
}

model ProduitMatiere {
  produitId Int
  matiereId Int
  quantitee Int
  Matiere   MatierePremiere @relation(fields: [matiereId], references: [id], onDelete: Cascade)
  Produit   Produit         @relation(fields: [produitId], references: [id], onDelete: Cascade)

  @@id([matiereId, produitId])
}

model Commande {
  id           Int             @id @default(autoincrement())
  dateCommande DateTime
  dateCreation DateTime        @default(now())
  clientId     Int
  client       Client          @relation(fields: [clientId], references: [id])
  livraison    Livraison?
  produits     ligneCommande[]
}

model Livraison {
  id            Int             @id @default(autoincrement())
  dateLivraison DateTime
  status        LivraisonStatus @default(EnAttente)
  commnadeId    Int             @unique
  commande      Commande        @relation(fields: [commnadeId], references: [id])
}

model ligneCommande {
  commandeId Int
  produitId  Int
  quantite   Int
  commande   Commande @relation(fields: [commandeId], references: [id])
  produit    Produit  @relation(fields: [produitId], references: [id])

  @@id([commandeId, produitId])
}

model Fournisseur {
  id               Int                          @id @default(autoincrement())
  createdAt        DateTime                     @default(now())
  updatedAt        DateTime                     @updatedAt
  nom              String                       @unique
  telephone        String?
  adresse          String?
  email            String?
  matierePremieres FournisseurMatierePremiere[]
}

model FournisseurMatierePremiere {
  fournisseurId     Int
  matierePremiereId Int
  quantitee         Int
  fournisseur       Fournisseur     @relation(fields: [fournisseurId], references: [id], onDelete: Cascade)
  matierePremiere   MatierePremiere @relation(fields: [matierePremiereId], references: [id], onDelete: Cascade)

  @@id([fournisseurId, matierePremiereId])
}

model MatierePremiere {
  id               Int                          @id @default(autoincrement())
  createdAt        DateTime                     @default(now())
  updatedAt        DateTime                     @updatedAt
  nom              String                       @unique
  unite            String
  quantiteeMatiere Int?
  fournisseurs     FournisseurMatierePremiere[]
  produitMatiere   ProduitMatiere[]
}

enum ClientType {
  Societe
  Commune
}

enum LivraisonStatus {
  EnAttente
  Livre
  Annule
}
